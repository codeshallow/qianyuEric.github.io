I"(Q<h2 id="css规范">CSS规范</h2>
<p>CSS遵循可读性强，便于维护的原则</p>
<h3 id="代码规范">代码规范</h3>
<h4 id="样式表编码">样式表编码!</h4>
<p>样式文件必须写上 @charset 规则，并且一定要在样式文件的第一行首个字符位置开始写，编码名用 “UTF-8”。</p>
<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="k">@charset</span> <span class="s1">"UTF-8"</span><span class="p">;</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<h4 id="代码风格">代码风格</h4>
<h5 id="代码格式化">代码格式化</h5>
<p>样式书写一般有两种：一种是紧凑格式 (Compact)， 一种是展开格式（Expanded），统一使用展开格式书写样式</p>
<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="c">/* 紧凑 */</span>
<span class="nc">.nav</span><span class="p">{</span> <span class="nl">display</span><span class="p">:</span> <span class="nb">block</span><span class="p">;</span><span class="nl">width</span><span class="p">:</span> <span class="m">50px</span><span class="p">;}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="c">/* 展开 */</span>
<span class="nc">.nav</span> <span class="p">{</span>
    <span class="nl">display</span><span class="p">:</span> <span class="nb">block</span><span class="p">;</span>
    <span class="nl">width</span><span class="p">:</span> <span class="m">50px</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<h5 id="代码大小写-tsap">代码大小写-tsap</h5>
<p>样式选择器，属性名，属性值关键字全部使用小写字母书写，并使用“-”连接。</p>
<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
</pre></td><td class="rouge-code"><pre><span class="c">/* 不推荐 */</span>
<span class="nc">.navList</span><span class="p">{</span>
	<span class="py">DISPLAY</span><span class="p">:</span><span class="n">BLOCK</span><span class="p">;</span>
<span class="p">}</span>

<span class="c">/* 推荐 */</span>
<span class="nc">.nav-list</span> <span class="p">{</span>
	<span class="nl">display</span><span class="p">:</span><span class="nb">block</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<h5 id="常用方式-bfc">常用方式-bfc</h5>
<p>CSS样式常用的为三种方式：内联（行间）、内嵌、外链</p>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
</pre></td><td class="rouge-code"><pre><span class="c">&lt;!-- 推荐 外链接式 --&gt;</span>
<span class="nt">&lt;head&gt;</span>
  <span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">"stylesheet"</span> <span class="na">type=</span><span class="s">"text/css"</span> <span class="na">href=</span><span class="s">"css/style.css"</span> <span class="nt">/&gt;</span> 
<span class="nt">&lt;/head&gt;</span>

<span class="c">&lt;!-- 内嵌式 适用于小页面 --&gt;</span>
<span class="nt">&lt;head&gt;</span>
  <span class="nt">&lt;style </span><span class="na">type=</span><span class="s">"text/css"</span><span class="nt">&gt;</span>
    <span class="nt">html</span><span class="o">,</span><span class="nt">body</span><span class="p">{</span>
		<span class="nl">margin</span><span class="p">:</span> <span class="m">0</span><span class="p">;</span>
		<span class="nl">padding</span><span class="p">:</span> <span class="m">0</span><span class="p">;</span>
	<span class="p">}</span>
  <span class="nt">&lt;/style&gt;</span>
<span class="nt">&lt;/head&gt;</span>

 <span class="c">&lt;!-- 不推荐 行内样式，优先级太高、HTML不纯净 --&gt;</span>
 <span class="nt">&lt;p</span> <span class="na">style=</span><span class="s">"color: red;"</span><span class="nt">&gt;</span>我是P段落<span class="nt">&lt;/p&gt;</span>

 <span class="c">&lt;!-- 不推荐 导入式，相比link太慢 --&gt;</span>
<span class="nt">&lt;head&gt;</span>
  <span class="nt">&lt;style </span><span class="na">type=</span><span class="s">"text/css"</span><span class="nt">&gt;</span>
    <span class="k">@import</span> <span class="sx">url("css/style.css")</span><span class="p">;</span>
  <span class="nt">&lt;/style&gt;</span>
<span class="nt">&lt;/head&gt;</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<ul>
  <li>推荐使用类选择器，少用ID选择器!
ID在一个页面中的唯一性导致了如果以ID为选择器来写CSS，就无法重用。
    <h5 id="选择器-tsap">选择器-tsap</h5>
  </li>
  <li>尽量少用通用选择器 *</li>
  <li>不使用 ID 选择器</li>
  <li>不使用无具体语义定义的标签选择器</li>
  <li>尽量不使用!important
```css
/* 推荐 */
.nav {}
.nav li {}
.nav li p{}</li>
</ul>

<p>/* 不推荐 */
*{}
#nav {}
.nav div{}</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre>##### 代码缩进
统一使用四个空格进行代码缩进，使得各编辑器表现一致（各编辑器有相关配置）。
```css
.nav {
    width: 100%;
    height: 100%;
}
</pre></td></tr></tbody></table></code></pre></div></div>
<h5 id="分号-tsap">分号-tsap</h5>
<p>每个属性声明末尾都要加分号；</p>
<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre><span class="nc">.nav</span> <span class="p">{</span>
    <span class="nl">width</span><span class="p">:</span> <span class="m">100%</span><span class="p">;</span>
    <span class="nl">height</span><span class="p">:</span> <span class="m">100%</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<h5 id="代码易读性">代码易读性</h5>
<ul>
  <li>左括号与类名之间一个空格，冒号与属性值之间一个空格</li>
  <li>逗号分隔的取值，逗号之后一个空格</li>
  <li>为单个css选择器或新申明开启新行</li>
  <li>颜色值 rgb() rgba() hsl() hsla() rect() 中不需有空格，且取值不要带有不必要的 0</li>
  <li>属性值十六进制数值能用简写的尽量用简写</li>
  <li>不要为 0 指明单位-tsap
``` css
/* 不推荐 */
.element {
background-color: rgba(25, 25, 25, 0.6);
  transition: linear 0.8s;
}</li>
</ul>

<p>/* 推荐 */
.element {
    background-color: rgba(25, 25, 25, .6);
	transition: linear .8s;
}</p>

<p>/* 不推荐 */
.element {
	margin: 0rem;
	border-width: 0px;
}</p>

<p>/* 推荐 */
.element {
	margin: 0;
	border-width: 0;
}</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="rouge-code"><pre>##### 属性值引号
css属性值需要用到引号时，统一使用单引号
```css
/* 推荐 */
.nav { 
	font-family: 'Hiragino Sans GB';
}

/* 不推荐 */
.nav { 
	font-family: "Hiragino Sans GB";
}
</pre></td></tr></tbody></table></code></pre></div></div>
<h5 id="属性书写顺序-tsap">属性书写顺序-tsap</h5>
<p>建议遵循以下顺序：</p>
<ol>
  <li>布局定位属性：display / position / float / clear / visibility / overflow</li>
  <li>自身属性：width / height / margin / padding / border / background</li>
  <li>文本属性：color / font / text-decoration / text-align / vertical-align / white- space / break-word</li>
  <li>其他属性（CSS3）：content / cursor / border-radius / box-shadow / text-shadow / background:linear-gradient …</li>
  <li>CSS3 浏览器私有前缀在前，标准前缀在后
    <div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
</pre></td><td class="rouge-code"><pre><span class="nc">.nav</span> <span class="p">{</span>
 <span class="nl">display</span><span class="p">:</span> <span class="nb">block</span><span class="p">;</span>
 <span class="nl">position</span><span class="p">:</span> <span class="nb">relative</span><span class="p">;</span>
 <span class="nl">float</span><span class="p">:</span> <span class="nb">left</span><span class="p">;</span>
 <span class="nl">width</span><span class="p">:</span> <span class="m">100px</span><span class="p">;</span>
 <span class="nl">height</span><span class="p">:</span> <span class="m">100px</span><span class="p">;</span>
 <span class="nl">margin</span><span class="p">:</span> <span class="m">0</span> <span class="m">10px</span><span class="p">;</span>
 <span class="nl">padding</span><span class="p">:</span> <span class="m">20px</span> <span class="m">0</span><span class="p">;</span>
 <span class="nl">font-family</span><span class="p">:</span> <span class="n">Arial</span><span class="p">,</span> <span class="s2">'Helvetica Neue'</span><span class="p">,</span> <span class="n">Helvetica</span><span class="p">,</span> <span class="nb">sans-serif</span><span class="p">;</span>
 <span class="nl">color</span><span class="p">:</span> <span class="m">#333</span><span class="p">;</span>
 <span class="nl">background</span><span class="p">:</span> <span class="n">rgba</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">0</span><span class="p">,</span><span class="m">0</span><span class="p">,</span><span class="m">.5</span><span class="p">);</span>
 <span class="nl">-webkit-border-radius</span><span class="p">:</span> <span class="m">10px</span><span class="p">;</span>
 <span class="nl">-moz-border-radius</span><span class="p">:</span> <span class="m">10px</span><span class="p">;</span>
 <span class="nl">-o-border-radius</span><span class="p">:</span> <span class="m">10px</span><span class="p">;</span>
 <span class="nl">-ms-border-radius</span><span class="p">:</span> <span class="m">10px</span><span class="p">;</span>
 <span class="nl">border-radius</span><span class="p">:</span> <span class="m">10px</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div>    </div>
    <h5 id="换行-bfc">换行-bfc</h5>
    <p>对于组合的选择器，各选择器单独占一行，利于阅读和修改
``` css
/* 不推荐 <em>/
.item, .item-secondary, .item[type=text] {
  padding: 15px;
  margin: 0px 0px 15px;
}
/</em> 如果需要中途修改选择器，可能会有漏改 */
.menu .item, .menu .item-secondary, .item[type=text] {
  padding: 15px;
  margin: 0px 0px 15px;
}</p>
  </li>
</ol>

<p>/* 推荐 */
.menu .item,
.menu .item-secondary,
.menu .item[type=”text”] {
  padding: 15px;
  margin-bottom: 15px;
}</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre>对于只包含一条声明的样式，为了易读性和便于快速编辑，可以将语句放在同一行。花括号{}内两侧都需要一个空格。
``` css
/* 临近的样式花括号可对齐 */
.icon			{ background-position: 0 0; }
.icon-home		{ background-position: 0 -20px; }
.icon-account	{ background-position: 0 -40px; }
</pre></td></tr></tbody></table></code></pre></div></div>
<h5 id="简写形式的属性声明-bfc">简写形式的属性声明-bfc</h5>
<p>需要显示地设置所有值的情况下，尽量使用简写形式的属性声明。如果只需要指定部分属性，不建议使用简写形式。过度使用简写形式会导致代码混乱，并且会对属性带来不必要的覆盖，或许会引起意外的副作用。<br />
[padding，margin，background，border，border-radius]</p>
<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
</pre></td><td class="rouge-code"><pre><span class="c">/* 简写形式设置所有属性 */</span>
<span class="nc">.element</span> <span class="p">{</span>
	<span class="nl">margin</span><span class="p">:</span> <span class="m">0</span> <span class="m">0</span> <span class="m">10px</span><span class="p">;</span>
	<span class="nl">border</span><span class="p">:</span> <span class="m">1px</span> <span class="nb">solid</span> <span class="m">#333</span><span class="p">;</span>
	<span class="nl">background</span><span class="p">:</span> <span class="m">#00FF00</span> <span class="sx">url(bgimage.gif)</span> <span class="nb">no-repeat</span> <span class="nb">fixed</span> <span class="nb">top</span><span class="p">;</span>
	<span class="nl">border-radius</span><span class="p">:</span> <span class="m">3px</span> <span class="m">3px</span> <span class="m">0</span> <span class="m">0</span><span class="p">;</span>
<span class="p">}</span>

<span class="c">/* 设置部分属性 */</span>
<span class="nc">.element</span> <span class="p">{</span>
	<span class="nl">margin-bottom</span><span class="p">:</span> <span class="m">10px</span><span class="p">;</span>	
	<span class="nl">border-color</span><span class="p">:</span> <span class="m">#666</span><span class="p">;</span>
	<span class="nl">border-top-left-radius</span><span class="p">:</span> <span class="m">3px</span><span class="p">;</span>
	<span class="nl">border-top-right-radius</span><span class="p">:</span> <span class="m">3px</span><span class="p">;</span>
	<span class="nl">background-image</span><span class="p">:</span> <span class="sx">url("image.jpg")</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<h5 id="后代选择器命名-bfc">后代选择器命名-bfc</h5>
<p>后代选择器不需要完整表现结构树层级，尽量简短。
通过使用后代选择器的方法，你不需要考虑他的命名是否已被使用，因为他只在当前模块或元件中生效，同样的样式名可以在不同的模块或元件中重复使用，互不干扰；在多人协作或者分模块协作的时候效果尤为明显
注：后代选择器不要单独使用，因为污染的可能性较大；</p>
<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
</pre></td><td class="rouge-code"><pre><span class="c">/* 不推荐完整的结构树层级 */</span>
<span class="nc">.m-list</span> <span class="p">{</span> <span class="nl">margin</span><span class="p">:</span> <span class="m">0</span><span class="p">;</span> <span class="p">}</span>
<span class="nc">.m-list</span> <span class="nc">.m-list-itm</span> <span class="p">{</span> <span class="nl">margin</span><span class="p">:</span> <span class="m">1px</span><span class="p">;</span> <span class="p">}</span>
<span class="nc">.m-list</span> <span class="nc">.m-list-cnt</span> <span class="p">{</span> <span class="nl">margin-left</span><span class="p">:</span> <span class="m">100px</span><span class="p">;</span> <span class="p">}</span>

<span class="c">/* 推荐 简洁写法，这里的.itm和.cnt只在.m-list中有效 */</span>
<span class="nc">.m-list</span> <span class="p">{</span> <span class="nl">margin</span><span class="p">:</span> <span class="m">0</span><span class="p">;</span> <span class="p">}</span>
<span class="nc">.m-list</span> <span class="nc">.itm</span> <span class="p">{</span> <span class="nl">margin</span><span class="p">:</span> <span class="m">1px</span><span class="p">;</span> <span class="p">}</span>
<span class="nc">.m-list</span> <span class="nc">.cnt</span> <span class="p">{</span> <span class="nl">margin-left</span><span class="p">:</span> <span class="m">100px</span><span class="p">;</span> <span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<h5 id="媒体查询">媒体查询</h5>
<p>尽量将媒体查询的规则靠近与他们相关的规则，不要将他们一起放到一个独立的样式文件中，或者丢在文档的最底部，这样做只会让大家以后更容易忘记他们</p>
<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
</pre></td><td class="rouge-code"><pre><span class="nc">.element</span> <span class="p">{</span>
    <span class="err">...</span>
<span class="p">}</span>
<span class="nc">.element-avatar</span><span class="p">{</span>
    <span class="err">...</span>
<span class="p">}</span>

<span class="c">/* 推荐 媒体查询尽量靠近与其相关的规则 */</span>
<span class="k">@media</span> <span class="p">(</span><span class="n">min-width</span><span class="p">:</span> <span class="m">480px</span><span class="p">)</span> <span class="p">{</span>
    <span class="nc">.element</span> <span class="p">{</span>
        <span class="err">...</span>
    <span class="p">}</span>
    <span class="nc">.element-avatar</span> <span class="p">{</span>
        <span class="err">...</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<h3 id="注释规范-tsap">注释规范-tsap</h3>
<h4 id="单行注释">单行注释</h4>
<ul>
  <li>注释以字符 /* 开始，以字符 */ 结束</li>
  <li>注释不能嵌套
    <div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre><span class="c">/* 这是一行单行注释 */</span>
<span class="nc">.element</span> <span class="p">{</span>
  <span class="err">...</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div>    </div>
    <h4 id="模块注释">模块注释</h4>
    <p>注释内容第一个字符和最后一个字符都是一个空格字符，/* 与 模块信息描述占一行，多个横线分隔符-与<em>/占一行，行与行之间相隔两行。<br />
推荐：
```css
/</em> Module A
—————————————————————- */
.mod_a {}</p>
  </li>
</ul>

<p>/* Module B
—————————————————————- */
.mod_b {}</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre>不推荐：
```css
/* Module A ---------------------------------------------------- */
.mod_a {}
/* Module B ---------------------------------------------------- */
.mod_b {}
</pre></td></tr></tbody></table></code></pre></div></div>
<h4 id="文件信息注释">文件信息注释</h4>
<p>在样式文件编码声明 @charset 语句下面注明页面名称、作者、创建日期等信息。</p>
<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre><span class="k">@charset</span> <span class="s1">"UTF-8"</span><span class="p">;</span>
<span class="c">/**
 * @desc File Info
 * @author Author Name
 * @date 2015-10-10
 */</span>
</pre></td></tr></tbody></table></code></pre></div></div>
:ET